# Микросервисы SkillUP

## 1. Auth Service
- Аутентификация и авторизация пользователей
- Управление ролями и доступом
- Email-верификация, сброс пароля

## 2. User Service
- Профиль пользователя (аватар, интересы, настройки)
- Админ-панель управления пользователями

## 3. Text Generation Service
- Генерация текстов: курсовые, эссе, рефераты, отчёты, сочинения, рассказы, статьи
- Интеграция с AI-провайдерами (OpenAI, HuggingFace)

## 4. Homework Helper Service
- Решение задач по математике, физике, химии, биологии
- Графики, формулы, расчеты, конспекты

## 5. Explain Service
- Объяснение материала "простыми словами"
- Генерация пошаговых инструкций и примеров
- Подготовка к экзаменам/тестам

## 6. Text Correction Service
- Проверка орфографии и грамматики
- Перефразирование, улучшение стиля
- Интеграция с антиплагиат сервисами

## 7. Presentation Generator Service
- Генерация презентаций и слайдов
- Диаграммы, блок-схемы, визуальные конспекты

## 8. Planner Service
- Создание расписаний и планов подготовки
- Напоминания о дедлайнах и важных датах

## 9. Exam & Test Service
- Генерация вопросов и ответов
- Автотесты, разбор типичных ошибок

## 10. Referral & Achievement Service
- Реферальная система (приглашения, начисление очков)
- Достижения, бейджи, уровни

## 11. Notification Service
- Email-уведомления
- Интеграция с внешними почтовыми сервисами (SMTP, SendGrid)
- Push-уведомления (опционально)

## 12. Payment Service
- Монетизация, подписки, тарифы
- Интеграция со Stripe/YooKassa

## 13. Gateway/API Aggregator (BFF)
- Единая точка входа для фронта
- Агрегация и маршрутизация запросов к микросервисам

---

**Рекомендации:**
- Для MVP можно объединить часть сервисов (например, Text Generation + Correction).
- Каждый сервис — отдельное приложение с REST/gRPC API.
- Уведомления и платежи можно вынести в отдельные сервисы при масштабировании.
- API Gateway (Backend for Frontend) нужен для удобства интеграции и авторизации.

Если нужно — могу расписать архитектуру/схему взаимодействия сервисов, типы данных, пример API для любого из них!