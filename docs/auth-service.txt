# Auth Service

## Цель
Микросервис для управления пользователями и авторизацией в SkillUp.

## Технологии
- Laravel 12 (PHP 8.2+)
- PostgreSQL 15+
- Redis 7+
- RabbitMQ 3.12+
- JWT + Refresh Tokens

## Функционал

### Аутентификация
- Регистрация по email/password с автогенерацией access/refresh токенов
- JWT токены (access: 15 мин, refresh: 7 дней)
- Сброс пароля по email с одноразовым токеном (TTL 1 час)
- Подтверждение email через `email_verification_token`
- Rate limiting через middleware `rate.limit`

### Авторизация
- Роли: `user`, `admin`
- Middleware `jwt.auth` + `role`
- Logout отзывает все refresh токены пользователя
- Обновление профиля и смена пароля

## API

### Публичные
```
POST /api/auth/register
POST /api/auth/login
POST /api/auth/refresh
POST /api/auth/forgot-password
POST /api/auth/reset-password
POST /api/auth/verify-email/{token}
```

### Защищенные
```
GET    /api/auth/me
POST   /api/auth/logout
PUT    /api/auth/profile
PUT    /api/auth/password
```

### Админ
```
GET    /api/admin/users
PUT    /api/admin/users/{id}/role
POST   /api/admin/users/{id}/ban
```

## База данных

### users
```sql
id                      BIGSERIAL PRIMARY KEY
name                    VARCHAR(255) NOT NULL
email                   VARCHAR(255) UNIQUE NOT NULL
password                VARCHAR(255) NOT NULL -- кастомный cast hashed
role                    VARCHAR(20) DEFAULT 'user'
is_active               BOOLEAN DEFAULT true
email_verified_at       TIMESTAMP NULL
email_verification_token VARCHAR(255) NULL
last_login_at           TIMESTAMP NULL
remember_token          VARCHAR(100) NULL
created_at              TIMESTAMP NULL
updated_at              TIMESTAMP NULL
```

### refresh_tokens
```sql
id          BIGSERIAL PRIMARY KEY
user_id     BIGINT REFERENCES users(id) ON DELETE CASCADE
token_hash  VARCHAR(255) UNIQUE NOT NULL
expires_at  TIMESTAMP NOT NULL
created_at  TIMESTAMP NULL
updated_at  TIMESTAMP NULL
```

### password_resets
```sql
email       VARCHAR(255) NOT NULL
token       VARCHAR(255) NOT NULL
expires_at  TIMESTAMP NOT NULL
created_at  TIMESTAMP NULL
```

## События RabbitMQ

### user.registered
```json
{
  "user_id": 123,
  "email": "user@example.com",
  "role": "user",
  "name": "John Doe",
  "verification_token": "..."
}
```

### user.logged_in
```json
{
  "user_id": 123,
  "ip_address": "192.168.1.1"
}
```

### auth.email_verified
```json
{
  "user_id": 123,
  "email": "user@example.com",
  "name": "John Doe",
  "role": "user",
  "verified_at": "2025-09-27T12:34:56Z"
}
```

## Безопасность
- Пароли: минимум 6 символов, hash через встроенный каст
- Rate limiting: middleware `rate.limit` (по IP + route name)
- JWT: access 15 минут, refresh 7 дней, хранение refresh в БД (sha256)
- JWT middleware блокирует `is_active=false`
- CORS настраивается через Laravel config