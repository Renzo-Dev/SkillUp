services:
  auth-service:
    build:
      context: ./services/auth-service
      dockerfile: Dockerfile
    container_name: auth-service
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./services/auth-service/src:/var/www/html
      - ./services/auth-service/supervisord.conf:/etc/supervisor/conf.d/supervisord.conf
    environment:
      - DB_CONNECTION=pgsql
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=${RABBITMQ_USER}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=
    ports:
      - '9000:9000'
    networks:
      - skillup-network
    depends_on:
      - postgres
      - rabbitmq
      - redis

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    restart: unless-stopped
    working_dir: /var/www/
    volumes:
      - ./frontend/src:/var/www/
      - node_modules:/var/www/node_modules
    environment:
      # следим за изменениями внутри docker
      - CHOKIDAR_USEPOLLING=1
      - NUXT_HOST=0.0.0.0
      - NUXT_PORT=3000
    ports:
      - '3000:3000'
    networks:
      - skillup-network

  nginx:
    image: nginx:alpine
    container_name: nginx_gateway
    restart: unless-stopped
    ports:
      - '80:80'
      # - '443:443'
    volumes:
      # - ./services:/var/www/html
      - ./services/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
      - skillup-network
    depends_on:
      - auth-service
      - frontend

  postgres:
    image: postgres:15
    container_name: postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    networks:
      - skillup-network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: unless-stopped
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    ports:
      - '5672:5672'
      - '15672:15672'
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - skillup-network

  redis:
    image: redis:7-alpine
    container_name: redis
    restart: unless-stopped
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    networks:
      - skillup-network

volumes:
  postgres_data:
  rabbitmq_data:
  redis_data:
  node_modules:

networks:
  skillup-network:
    driver: bridge
